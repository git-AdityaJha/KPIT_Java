public class BankTestAssignment{
	public static void main(String args[]) {
		
		// Savings Account
		SavingsAccount savAcc = new SavingsAccount(123, "Adi", 50000);
		savAcc.showBankAcc();
		savAcc.withdraw(5000.0);
		savAcc.showBankAcc();
		
		// Fixed Deposit Account
		FixedDepositAccount fixAcc = new FixedDepositAccount(122, "Adi", 50000, 5, 10000);
		fixAcc.showFixedDepositBal();
		
		// Credit Card Account
		CreditCardAccount creditAcc = new CreditCardAccount(124, "Adi", 50000, 25000);
		creditAcc.displayCreditCardBal();
		
		// Current Account
		CurrentAccount currAcc = new CurrentAccount(125, "Adi", 50000);
		currAcc.handleTransaction();
	}
}

class BankAccount{
	// fields
	int accNumber;
	String accHolder;
	double accBal;
	
	// constructor
	BankAccount(int num, String name, double bal){
//		System.out.println("BankAccount Constructor Called...");
		accNumber = num;
		accHolder = name;
		accBal = bal;
	}
	
	// methods 
	void deposit(double amt) {
		System.out.println("depositing..."+amt);
		accBal += amt;
	}
	void withdraw(double amt) {
		System.out.println("withdrawing..."+amt);
		accBal -= amt;
	}
	void showBankAcc() {
		System.out.println("----------------");
		System.out.println("-> DISPLAYING ACCOUNT");
		System.out.println("Account HashCode : "+ hashCode());
		System.out.println("Account Name : "+ accHolder);
		System.out.println("Account Number : "+ accNumber);
		System.out.println("Account Balance : "+ accBal);	
		System.out.println("----------------");
	}
}

class SavingsAccount extends BankAccount{
	float rateOfInterest = 4;
	
	// constructor
	SavingsAccount(int num, String name, double bal){
		super(num, name, bal);
	}
	
	// methods 
	void showBankAcc() {
		super.showBankAcc();
	}
}

class FixedDepositAccount extends SavingsAccount{
	int currYear;
	int maturityYear = 5;
	double FDamount;
	float FDrate = 7.5f;
	
	FixedDepositAccount(int num, String name, double bal, int year, double fdAmt){
		super(num, name, bal);
		FDamount = fdAmt;
		currYear = year;
	}
	
	void calculateMaturityAmount() {
		double maturityAmt;
		double interest;
		interest = (FDrate/100) * accBal * (currYear/5);
		maturityAmt = interest + accBal;
		if(currYear > maturityYear) {
			interest = (FDrate/100) * accBal * (currYear%5);
			maturityAmt = interest + maturityAmt;
		}
		System.out.println("Your Account Matured !!");
		System.out.println("Fixed Deposit Amount : "+ maturityAmt);
	}
	
	void showFixedDepositBal() {
		System.out.println("FIXED DEPOSIT ACCOUNT");
		if(currYear < maturityYear) {
			System.out.println("Account not matured !!");
		}
		else{
			calculateMaturityAmount();
		}
		System.out.println("----------------");
	}
}

class CreditCardAccount extends BankAccount{
	double creditLimit = 100000;
	double cashLimit = creditLimit;
	double purchaseAmount;
	
	CreditCardAccount(int num, String name, double bal, double purchaseAmt) {
		super(num, name, bal);
		purchaseAmount = purchaseAmt;
	}
	
	void calculateLimit() {
		System.out.println("Purchased. Account debited !");
		cashLimit -= purchaseAmount;
	}
	
	void displayCreditCardBal() {
		System.out.println("CREDIT CARD ACCOUNT");
		if(purchaseAmount > cashLimit) {
			System.out.println("You cannot purchase above credit card limit !!");
		}
		else {
			System.out.println("Credit Card Balance : "+ cashLimit);
			System.out.println("Purchase amount : "+ purchaseAmount);
			calculateLimit();
			System.out.println("Remaining Credit Card Balance : "+ cashLimit);
		}
		System.out.println("-----------------");
	}
}

class CurrentAccount{
	int accountNumber;
	String accountHolder;
	double balanceLimit = 100000;
	double withdrawAmount;
	
	CurrentAccount(int num, String name, double withdrawAmt){
		accountNumber = num;
		accountHolder = name;
		withdrawAmount = withdrawAmt;
	}
	
	void withdraw() {
		System.out.println("Available Current Account balance : "+ balanceLimit);
		System.out.println("Withdrawing amount..."+ withdrawAmount);
		balanceLimit -= withdrawAmount;
		System.out.println("Remaining Current Account Balance : "+ balanceLimit);
	}
	
	void handleTransaction() {
		System.out.println("CURRENT ACCOUNT");
		if(withdrawAmount > balanceLimit) {
			System.out.println("Limit exceeded !! Cannot withdraw");
		}
		else {
			withdraw();
		}
	}
}
