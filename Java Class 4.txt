JAVA CLASS 4 | 20/1/24
----------------------

-> Buy all the things that money can buy but invest time in things
   which money cannot buy.
* Book -> Seven spiritual laws of Success.
* Book -> The roayl science of God Realization

------------
INTERFACES - 
------------
	-pure abstract class




-----------
PACKAGES -
-----------
	- Similar to directories on OS.

-------------------
EXCEPTION HANDLING -
-------------------
	- handling run time error
				|
	-------------------------------------------------------------
	|		|	      |		|		|
	compile		run 	   linker	fatal 		logical
	time		time
	|		|	       |	|		  |
	syntax		Exception   .jar file
				     missing	out of memory	4+4=16
	; missing	10/0	   .jar file 
				   missing

	* if the constructor is failed, then the data allocated by new keyword is rollbacked	


-----------------SIR'S NOTES---------------------------------------------------
Light <-- pure partial
	SunLight <-- partial info
	MoonLight
	TubeLight


	GeometricalShape
	Shape

interface Instrument
{
	void use();
}
abstract class MusicalInstrument implements Instrument //isA
{
	abstract void play(); + 1	
	public void use() { }
}
abstract class StringBasedMusicalInstrument extends MusicalInstrument
{
	abstract void tuneStrings() + 2
	void clean() { } //b. inherited to its child
	void packIt() { } 
}
class Guitar extends StringBasedMusicalInstrument
{
	void pluck() { } // a. exclusive
	void packIt() { } //c. inherited-cum-overridden
	void play() { } //d. implemented - mandatory
	void tuneString() { } //d. implemented - mandatory
	public void use() { } //d. implemented - mandatory
}


	Object x = new HeartSurgeon();

	x.toString()
	x.diagnose();
	x.doSurgery();
	x.checkECG();


	Guitar guitar = new Guitar();

	Instrument i = guitar; 
	i.use();
	i.play();
	i.tuneString();
	i.pluck();
			Instrument <-- pure - Pure AC - interface
			     |use();
	-------------------------------------------
	|					|
MusicalInstrument <-AC			MedicalInstrument<--AC
	|play();				|diagnose();
--------------------------------	-----------------
  |			|		|		|
StringBased	AirBased <--AC		Surgical	Pathological
Musical		Musical			Medical		Medical
Instrument	Instrument		Instrument	Instrument
|tuneStrings();	|			|sterilize();	|read();
|clean(){..}				|		|
Guitar	Violin	Flute <--concrete	Cutter		ECGMachine
| a) pluck(){}				| cut() { }	| read
| b) tuneStrings(){} 			|		| heart
| b) play(){}						  Beats();
| b) use(){}
| c) inherited
| d) overridden
|  clean(){ ..... } <--d
|
Electronic
Guitar	
| presets();

	interfaces

		- pure abstract class




			I
			|
		----------------
		|		|
		MusI		MedI
		|
	--------------
	|	|	|
	SBMI	ABMI DBMI
	|
	------------------
	|		|
	| Plucking	| Bowing
	| |pluck();	| | bow();
	Guitar		Violin
	
	




	Packages 	= directories on the Operating system
	|			folders 
	in java


	packages = to organize the relevant classes in a folder

	java.lang		java\lang
	java.awt		java\awt


			java
			|
		-------------------------------------
		|	|	|	|	|
		lang	awt	sql	net	util
		|	|	|	 |	|
		Object	Button	Driver Socket	LinkedList
		String  Frame   ResultSet	ArrayList
		Thread  Checkbox
		Exception


	use the package statement to make a package
		- package must be the first code in any 
		java source if issued


	use the import statement to avail the package


	java.lang <-- default package issued for java codes



			ACCESS SPECIFIERS

		1.       <-- a blank | default | friendly
				within the same folder/package
			ButterFly and Tiger can access each
			other token to create object of each 
			other

		2. private <-- referred within the class code body
		3. protected <-- can be referred by the child class
			within the same package
			or outside of that package

			- using the parent class reference
			protected is referred within the
			same package BUT Not in the
			other pacakges

			- without using the parent class
			reference | child can directly
			refer the protected members
			within the same or diff pacakge


		4. public <-- to the whole world




			jungle
			|
		--------------------------
		|	|	|	|
		farm	river	tree	cave
		|	|	|	|
	  FarmHouse	Frog	Parrot	Lion
			Fish	Sparrow Bear
				Monkey  Tiger
				Chimp	WhiteTiger

		
Royal Science of God Realization

Human Mind = Dhritrashtra in Mahabharata
	|
	Desires = Duryodhana

Good Habits vs Bad Habits = Dronacharya

EGO = Bhishma


Arjuna 	= Manipura Chakra
Krishna = Adnya Chakra - Third EYE 






Naming Convention in Java
-----------------------------


	1. ClassName - DriverManager


	2. methodName - setLookAndFeel() { }


	3. variableName - socialSecurityNumber=123213
			

	4. Packages	- jungle.cave

			lengthOnTarget=3;

			Jungle.Cave.tiger.Jump(LengthOnTarget);
	
















Exception Handling
-------------------

	handling run time errors


			Errors
			|
	-----------------------------------
	|	|	|	|	|
	compile run	linker	fatal	logical
	|	 |	  |	  |	  |
	syntax Exception missing  term    4+4=16
			 libraries
					
	;	10/0	 .jar file  out of    	
	missing		missing	    memory

		
		To handle runtime errors


	checked				unchecked
	by the compiler			by the compiler
	
try
catch
throw
throws
finally


			Object
			|
			Throwable
			| getMessage()
		-------------------
		|isA		|isA
		Error		Exception
				|checked
		--------------------------
		|unchecked		|
	RuntimeException	------------------
	|||  ||||||		|	|	|
      NPE|AE |		   IOException SQLExce.. ...
       IOBE  |
       | |
   SIOBE AIOBE
		





			Car

				
	shortDrive()		longDrive()
	|			|
	3 km			300 km


	1 CoolantException
	2 FuelException
	3 StepneyException
	4 InfotainmentException
	5 ACException
	6 SeatBeltException
	7 GearException
	8 AccidentException
	9 AirBagException
	10 TrafficException
	11 ParkingException
	12 TyrePressureException
	13 TyreTemperatureExceededException

-----------------------------------------SIR'S NOTES END-----------------------------



SELF NOTES - 
* abstract child of interface is not bound to have all the abstract
  functions from parent interface or abstract class.
* instrument

	interface Instrument{
		void use();
	}
	abstract class MusicalInstrument implements Instrument { //isA
		abstract void play();
		public void use() {...} // it fullfills the abstract method that comes
				// from the Instrument and implements it
				// so it is now a non-abstract method for all
				// of its childs.
	}
	abstract class StringBasedMusicalInstrument extends

* If class is public then its default constructor will be public but rest of its memebers will 
  not be public.



 


----------ASSINGMENT-----------
* Air based MI - Flute, Sehnai, Sexophone
* Drum based MI - Tabla, Dhol
* Pathelogical and rest classes we will have to make
* Have dedicated interfaces for each concrete classes like : For Guitar - plucking interface
* Packages - organize the relevant classes in package for all the topics.

----------MARATHON-------------
* Story questions
